@page "/counter"
@using BlazorHiPrint.Client.Components
@using BootstrapBlazor.Components
@using Microsoft.AspNetCore.Components.QuickGrid
@rendermode InteractiveAuto

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>



<p role="status">Current count: @currentCount</p>



<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<div>

    <QuickGrid Items="people">
        <PropertyColumn Property="@(p => GetValue(p, "PersonId"))" title="PersonId" Sortable="true">
        <HeaderTemplate >
            <div @onclick="()=>ColumnClick()">@context.Title</div>
        </HeaderTemplate>

        </PropertyColumn>
        <PropertyColumn Property="@(p => GetValue(p, "Name"))" Title="Name" Sortable="true" />
        <PropertyColumn Property="@(p => GetValue(p, "PromotionDate"))" Title="PromotionDate" Sortable="true" />
    </QuickGrid>
</div>

@code {
    //这里很明显可以看出来BootstrapBlazor 封装的Table 虽然强大，但是加载的速度有点慢
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }
    Type objType = typeof(Person);
    public object? GetValue(object obj,string propertyName)
    {

        return objType.GetProperty(propertyName).GetValue(obj, null);
    }
    //https://aspnet.github.io/quickgridsamples/sample

    private IQueryable<object> people = new[]
    {
        new Person(10895, "Jean Martin", new DateOnly(1985, 3, 16)),
        new Person(10944, "António Langa", new DateOnly(1991, 12, 1)),
        new Person(11203, "Julie Smith", new DateOnly(1958, 10, 10)),
        new Person(11205, "Nur Sari", new DateOnly(1922, 4, 27)),
        new Person(11898, "Jose Hernandez", new DateOnly(2011, 5, 3)),
        new Person(12130, "Kenji Sato", new DateOnly(2004, 1, 9)),
    }.AsQueryable();

    public void ColumnClick()
    {
        System.Console.WriteLine("ColumnClick " );
    }

}